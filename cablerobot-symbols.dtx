% \iffalse meta-comment
%
% Copyright (C) 2019 by Philipp Tempel <latex@philipptempel.me>
% -------------------------------------------------------
% 
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%    http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of LaTeX 
% version 2005/12/01 or later.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{cablerobot-symbols.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[2005/12/01]
%<package>\ProvidesPackage{cablerobot-symbols}
%<*package>
    [2020/01/10 v1.0.0 Cable Robots Symbols]
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{cablerobot-symbols}[2020/01/10]
\usepackage{ustuttmath}
\EnableCrossrefs         
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{cablerobot-symbols.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v1.0}{2004/11/05}{Initial version}
%
% \GetFileInfo{cablerobot-symbols.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment}
% 
%
% \title{The \textsf{cablerobot-symbols} package\thanks{This document
%   corresponds to \textsf{cablerobot-symbols}~\fileversion, dated \filedate.}}
% \author{Philipp Tempel \\ \texttt{p.tempel@tudelft.nl}}
%
% \maketitle
%
% \section{Introduction}
%
% Put text here.
%
% \section{Usage}
%
% Just use the macros and environments defined further down
%
% \StopEventually{}
%
% \section{Implementation}
%
% \subsection{Package Dependencies}
%
%
% The package is a toolbox of programming facilities geared primarily towards
% LaTeX class and package authors. It provides LaTeX frontends to some of the
% new primitives provided by e-TeX as well as some generic tools which are not
% strictly related to e-TeX but match the profile of this package. Note that the
% initial versions of this package were released under the name elatex. The
% package provides functions that seem to offer alternative ways of implementing
% some LaTeX kernel commands; nevertheless, the package will not modify any part
% of the LaTeX kernel.
%    \begin{macrocode}
\RequirePackage{etoolbox}
%    \end{macrocode}
%
% Set the font size relative to the current font size. The basic command of the
% package is |\relsize|, whose argument is a number of |\magsteps| to change
% size; from this are defined commands |\larger|, |\smaller|, |\textlarger|,
% etc.
%    \begin{macrocode}
\RequirePackage{relsize}
%    \end{macrocode}
%
% Additional math symbols. For a full list, see
% \url{http://milde.users.sourceforge.net/LUCR/Math/mathpackages/amssymb-symbols.pdf}
% amsfonts – TeX fonts from the American Mathematical Society
% An extended set of fonts for use in mathematics, including: extra mathematical symbols; blackboard bold letters (uppercase only); fraktur letters; subscript sizes of bold math italic and bold Greek letters; subscript sizes of large symbols such as sum and product; added sizes of the Computer Modern small caps font; cyrillic fonts (from the University of Washington); Euler mathematical fonts. All fonts are provided as Adobe Type 1 files, and all except the Euler fonts are provided as METAFONT source.
% The distribution also includes the canonical Type 1 versions of the Computer Modern family of fonts.
% Basic LaTeX support for the symbol fonts is provided by amsfonts.sty, with names of individual symbols defined in amssymb.sty. The Euler fonts are supported by separate packages; details can be found in the documentation. 
%    \begin{macrocode}
\RequirePackage{amsfonts}
% \RequirePackage{amssymb}
%    \end{macrocode}
%
% doublestroke – Typeset mathematical double stroke symbols
% A font based on Computer Modern Roman useful for typesetting the mathematical symbols for the natural numbers (N), whole numbers (Z), rational numbers (Q), real numbers (R) and complex numbers (C); coverage includes all Roman capital letters, ‘1’, ‘h’ and ‘k’. The font is available both as METAFONT source and in Adobe Type 1 format, and LaTeX macros for its use are provided.
% The fonts appear in the blackboard bold sampler. 
%    \begin{macrocode}
\RequirePackage{dsfont}
%    \end{macrocode}
%
% Typeset in-line fractions in a "nice" way. The package typesets fractions "nicely" - in the form 'a/b' (i.e., staggered with a slash between them, rather than directly one over the other). The package is distributed as part of a bundle including the units package. Nicefrac's facilities are provided, in a cleaner way, by the (experimental) xfrac package, but see also the faktor package for quotient spaces and the like.
%    \begin{macrocode}
\RequirePackage{nicefrac}
%    \end{macrocode}
%
% fouridx - Left sub- and superscripts in maths mode
% The package enables left subscripts and superscripts in maths mode. The sub- and superscripts are raised for optimum fitting to the symbol indexed, in such a way that left and right sub- and superscripts are set on the same level, as appropriate.
% The package provides an alternative to the use of the \sideset command in the amsmath package.
%    \begin{macrocode}
\RequirePackage{fouridx}
%    \end{macrocode}
%
% Place lines through maths formulae. A package to draw diagonal lines ("cancelling" a term) and arrows with limits (cancelling a term "to a value") through parts of maths formulae.
%    \begin{macrocode}
\RequirePackage{cancel}
%    \end{macrocode}
%
% Mathtools provides a series of packages designed to enhance the appearance of documents containing a lot of mathematics. The main backbone is amsmath, so those unfamiliar with this required part of the LaTeX system will probably not find the packages very useful.
% Mathtools provides many useful tools for mathematical typesetting. It is based on amsmath and fixes various deficiencies of amsmath and standard LaTeX. It provides:
% * Extensible symbols, such as brackets, arrows, harpoons, etc.;
% * Various symbols such as \coloneqq (:=);
% * Easy creation of new tag forms;
% * Showing equation numbers only for referenced equations;
% * Extensible arrows, harpoons and hookarrows;
% * Starred versions of the amsmath matrix environments for specifying the column alignment;
% * More building blocks: multlined, cases-like environments, new gathered environments;
% * Maths versions of \makebox, \llap, \rlap etc.;
% * Cramped math styles; and more...
%    \begin{macrocode}
\RequirePackage{mathtools}
%    \end{macrocode}
%
% EMPHasizing EQuations. The empheq package is part of the mathtools bundle. The package provides a visual markup extension to amsmath. The user-friendly interface allows the user to put a set of equations inside a box thus enhancing the \boxed feature of amsmath. As a side effect it's also possible to add material on both sides of the equations thus providing (and surpassing) the functionality of the cases package. Users of ntheorem will probably want to have a look at it as well, since the problem with end-of-theorem marks in gather and other environments can be circumvented using empheq.
%    \begin{macrocode}
\RequirePackage{empheq}
%    \end{macrocode}
%
% Provides macros to typeset bra-ket notation, as well as set specifiers, with a single (“|”) or a double (“||” or (“\|”) vertical bar specifier in between two bracketed parts. Each macro comes in a fixed-size version and an expanding version.
% If the package finds itself operating under e-tex, it uses the extended primitive \middle for more reliable results
%    \begin{macrocode}
\RequirePackage{braket}
%    \end{macrocode}
%
%  When typing an open interval as $]a,b[$, a closing bracket is being used in place of an opening fence and vice versa. This leads to the wrong spacing in, say, $]-a,b[$ or $A\in]a,b[=B$. The package attempts to solve this using:
%  \interval{a}{b} -> [a,b]
%  \interval[open]{a}{b} -> ]a,b[
%  \interval[open left]{a}{b} -> ]a,b]
% The package also supports fence scaling and ensures that the enclosing fences will end up having the proper closing and opening types.
% TeX maths does not do this job properly.
%    \begin{macrocode}
\RequirePackage{interval}
%    \end{macrocode}
%
% The bm package defines a command |\bm| which makes its argument bold. The
% argument may be any maths object from a single symbol to an expression. This
% is closely related to the specification of the |\boldsymbol| command in
% AMS-LaTeX, but |\bm| is rather more careful in the way it does things.
%    \begin{macrocode}
\RequirePackage{bm}
%    \end{macrocode}
%
% A comprehensive (SI) units package. Typesetting values with units requires
% care to ensure that the combined mathematical meaning of the value plus unit
% combination is clear. In particular, the SI units system lays down a
% consistent set of units with rules on how they are to be used. However,
% different countries and publishers have differing conventions on the exact
% appearance of numbers (and units). A number of LaTeX packages have been
% developed to provide consistent application of the various rules: SIunits,
% sistyle, unitsdef and units are the leading examples. The numprint package
% provides a large number of number-related functions, while dcolumn and rccol
% provide tools for typesetting tabular numbers. The siunitx package takes the
% best from the existing packages, and adds new features and a consistent
% interface. A number of new ideas have been incorporated, to fill gaps in the
% existing provision. The package also provides backward-compatibility with
% SIunits, sistyle, unitsdef and units. The aim is to have one package to handle
% all of the possible unit-related needs of LaTeX users. The package relies on
% LaTeX 3 support from the l3kernel and l3packages bundles.
%    \begin{macrocode}
\PassOptionsToPackage{%
% General styling
    multi-part-units=brackets,%
    zero-decimal-to-integer=false,%
    add-decimal-zero=false,%
    add-integer-zero=true,%
    per-mode=reciprocal,%
% Rounding
    round-mode=places,%
    round-precision=3,%
    round-half=even,%
% Products |\SI{1x2x3}|
    product-units=power,%
% Ranges |\SIrange|
    range-units=brackets,%
% Lists |\SIlist|
    list-units=brackets,%
% Tables
    table-unit-alignment=left,%
  }{siunitx}
\RequirePackage{siunitx}
%    \end{macrocode}
%
% The dcolumn package makes use of the array package to define a "D" column
% format for use in tabular environments. This package is part of the tools
% bundle in the LaTeX required distribution.
%    \begin{macrocode}
\RequirePackage{dcolumn}
%    \end{macrocode}
%
% Typeset in-line fractions in a "nice" way. The package typesets fractions
% "nicely" - in the form 'a/b' (i.e., staggered with a slash between them,
% rather than directly one over the other). The package is distributed as part
% of a bundle including the units package. Nicefrac's facilities are provided,
% in a cleaner way, by the (experimental) xfrac package, but see also the faktor
% package for quotient spaces and the like.
%    \begin{macrocode}
\RequirePackage{nicefrac}
%    \end{macrocode}
%
% fouridx - Left sub- and superscripts in maths mode The package enables left
% subscripts and superscripts in maths mode. The sub- and superscripts are
% raised for optimum fitting to the symbol indexed, in such a way that left
% and right sub- and superscripts are set on the same level, as appropriate.
% The package provides an alternative to the use of the |\sideset| command in
% the amsmath package.
%    \begin{macrocode}
\RequirePackage{fouridx}
%    \end{macrocode}
%
% Place lines through maths formulae. A package to draw diagonal lines
% ("cancelling" a term) and arrows with limits (cancelling a term "to a value")
% through parts of maths formulae.
%    \begin{macrocode}
\RequirePackage{cancel}
%    \end{macrocode}
%
% Mathtools provides a series of packages designed to enhance the appearance of
% documents containing a lot of mathematics. The main backbone is amsmath, so
% those unfamiliar with this required part of the LaTeX system will probably not
% find the packages very useful. Mathtools provides many useful tools for
% mathematical typesetting. It is based on amsmath and fixes various
% deficiencies of amsmath and standard LaTeX. It provides:
% * Extensible symbols, such as brackets, arrows, harpoons, etc.;
% * Various symbols such as |\coloneqq| (:=);
% * Easy creation of new tag forms;
% * Showing equation numbers only for referenced equations;
% * Extensible arrows, harpoons and hookarrows;
% * Starred versions of the amsmath matrix environments for specifying the
%   column alignment;
% * More building blocks: multlined, cases-like environments, new gathered
%   environments;
% * Maths versions of |\makebox|, |\llap|, |\rlap| etc.;
% * Cramped math styles; and more...
%    \begin{macrocode}
\RequirePackage{mathtools}
%    \end{macrocode}
%
% EMPHasizing EQuations. The empheq package is part of the mathtools bundle. The
% package provides a visual markup extension to amsmath. The user-friendly
% interface allows the user to put a set of equations inside a box thus
% enhancing the |\boxed| feature of amsmath. As a side effect it's also possible
% to add material on both sides of the equations thus providing (and surpassing)
% the functionality of the cases package. Users of ntheorem will probably want
% to have a look at it as well, since the problem with end-of-theorem marks in
% gather and other environments can be circumvented using empheq.
%    \begin{macrocode}
\RequirePackage{empheq}
%    \end{macrocode}
%
% Provides macros to typeset bra-ket notation, as well as set specifiers, with a
% single bar, a double bar, or vertical bar specifier in between two bracketed
% parts. Each macro comes in a fixed-size version and an expanding version. If
% the package finds itself operating under e-tex, it uses the extended primitive
% |\middle| for more reliable results
%    \begin{macrocode}
\RequirePackage{braket}
%    \end{macrocode}
%
%  When typing an open interval as $]a,b[$, a closing bracket is being used in
%  place of an opening fence and vice versa. This leads to the wrong spacing in,
%  say, $]-a,b[$ or $A \in ]a,b[ = B$. The package attempts to solve this using
%
%  |\interval{a}{b}| -> $\interval{a}{b}$
%
%  |\interval[open]{a}{b}| -> $\interval[open]{a}{b}$
%
%  |\interval[open left]{a}{b}| -> $\interval[open left]{a}{b}$
%
% The package also supports fence scaling and ensures that the enclosing fences
% will end up having the proper closing and opening types. TeX maths does not do
% this job properly.
%    \begin{macrocode}
\RequirePackage{interval}
%    \end{macrocode}
%
%
% \section{Macros}
%
% \begin{macro}{\MP}
% \cmd{MP}\marg{trans} or \cmd{MP}\marg{rot}\marg{trans}
%    \begin{macrocode}
\ProvideDocumentCommand{\MP}{ m g }{%
  \textsc{%
    \IfNoValueTF{#2}{#1T}{#1R#2T}%
  }%
  \xspace%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Constant Symbols}
%
% \begin{macro}{\positionsymbol}
% \cmd{\positionsymbol} Symbol to use for a position quantity.
%    \begin{macrocode}
\ProvideDocumentCommand{\positionsymbol}{}{r}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\translationsymbol}
% \cmd{\translationsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\translationsymbol}{}{T}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\rotationsymbol}
% \cmd{\rotationsymbol} Symbol to use for a rotationa quantity.
%    \begin{macrocode}
\ProvideDocumentCommand{\rotationsymbol}{}{R}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\posesymbol}
% \cmd{\posesymbol} Symbol to use for the platform pose.
%    \begin{macrocode}
\ProvideDocumentCommand{\posesymbol}{}{y}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\rollersymbol}
% \cmd{\rollersymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\rollersymbol}{}{Rr}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pulleysymbol}
% \cmd{\pulleysymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\pulleysymbol}{}{\rollersymbol}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\platformsymbol}
% \cmd{\platformsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\platformsymbol}{}{P}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\workspacesymbol}
% \cmd{\workspacesymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\workspacesymbol}{}{WS}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\winchsymbol}
% \cmd{\winchsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\winchsymbol}{}{W}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\payloadsymbol}
% \cmd{\payloadsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\payloadsymbol}{}{pay}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\drumsymbol}
% \cmd{\drumsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\drumsymbol}{}{D}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cablesymbol}
% \cmd{\cablesymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\cablesymbol}{}{C}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\directkinematicssymbol}
% \cmd{\directkinematicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\directkinematicssymbol}{}{DK}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\forwardkinematicssymbol}
% \cmd{\forwardkinematicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\forwardkinematicssymbol}{}{\directkinematicssymbol}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\inversekinematicssymbol}
% \cmd{\inversekinematicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\inversekinematicssymbol}{}{IK}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\backwardkinematicssymbol}
% \cmd{\backwardkinematicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\backwardkinematicssymbol}{}{IK}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\forwardynamicssymbol}
% \cmd{\forwardynamicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\forwardynamicssymbol}{}{FD}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\inversedynamicssymbol}
% \cmd{\inversedynamicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\inversedynamicssymbol}{}{ID}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\backwarddynamicssymbol}
% \cmd{\backwarddynamicssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\backwarddynamicssymbol}{}{\inversedynamicssymbol}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\servomotorsymbol}
% \cmd{\servomotorsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\servomotorsymbol}{}{SM}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\operationsymbol}
% \cmd{\operationsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\operationsymbol}{}{O}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\processsymbol}
% \cmd{\processsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\processsymbol}{}{\operationsymbol}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\unstrainedsymbol}
% \cmd{\unstrainedsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\unstrainedsymbol}{}{0}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\strainedsymbol}
% \cmd{\strainedsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\strainedsymbol}{}{S}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\centerofmasssymbol}
% \cmd{\centerofmasssymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\centerofmasssymbol}{}{CoM}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\proximalsymbol}
% \cmd{\proximalsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\proximalsymbol}{}{prx}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\distalsymbol}
% \cmd{\distalsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\distalsymbol}{}{dis}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforcesymbol}
% \cmd{\cableforcesymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforcesymbol}{}{f}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\distributionsymbol}
% \cmd{\distributionsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\distributionsymbol}{}{\sim}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\kinematicsymbol}
% \cmd{\kinematicsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\kinematicsymbol}{}{km}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\kinetostaticsymbol}
% \cmd{\kinetostaticsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\kinetostaticsymbol}{}{ks}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\minimumsymbol}
% \cmd{\minimumsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\minimumsymbol}{}{-}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\maximumsymbol}
% \cmd{\maximumsymbol}
%    \begin{macrocode}
\ProvideDocumentCommand{\maximumsymbol}{}{+}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Mathematical Symbols}
%
% \begin{macro}{\wrench}
% \cmd{\wrench} External wrench on the platform.
%    \begin{macrocode}
\ProvideDocumentCommand{\wrench}{}{\vect{w}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\wrapangle}
% \cmd{\wrapangle}\oarg{subscript} Wrapping angle along a pulley.
%    \begin{macrocode}
\ProvideDocumentCommand{\wrapangle}{ o }{%
  \IfNoValueTF{#1}{%
    \beta_{\mc{w}}%
  }{%
    \beta_{\mc{w}, #1}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\wrapangleopp}
% \cmd{\wrapangleopp}\oarg{subscript} Angle opposite to the pulley wrapping angle i.e.,\@ $\wrapangleopp = \pi - \wrapangle$
%    \begin{macrocode}
\ProvideDocumentCommand{\wrapangleopp}{ o }{%
  \IfNoValueTF{#1}{%
    \beta_{\mc{w/o}}%
  }{%
    \beta_{\mc{w/o}, #1}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\swivelangle}
% \cmd{\swivelangle} Swivel angle of a pulley about its local $\evec{z}$-axis.
%    \begin{macrocode}
\ProvideDocumentCommand{\swivelangle}{}{\gamma}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pose}
% \cmd{\pose}
%    \begin{macrocode}
\ProvideDocumentCommand{\pose}{ }{%
  \hat{\vect{\posesymbol}}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\dotpose}
% \cmd{\dotpose}
%    \begin{macrocode}
\ProvideDocumentCommand{\dotpose}{ }{%
  \hat{\dotvect{\posesymbol}}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\ddotpose}
% \cmd{\ddotpose}
%    \begin{macrocode}
\ProvideDocumentCommand{\ddotpose}{ }{%
  \hat{\ddotvect{\posesymbol}}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\platformposition}
% \cmd{\platformposition}
%    \begin{macrocode}
\ProvideDocumentCommand{\platformposition}{ s o O{} }{%
  \IfBooleanTF{#1}{%
    \IfValueTF{#2}{%
      \prescript{#2}{#3}{\positionsymbol}%
    }{%
      \positionsymbol%
    }%
  }{%
    \vect[#2][#3]{\positionsymbol}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\platformorientation}
% \cmd{\platformorientation}
%    \begin{macrocode}
\ProvideDocumentCommand{\platformorientation}{ s o O{} }{%
  \IfBooleanTF{#1}{%
    \IfValueTF{#2}{%
      \prescript{#2}{#3}{\rotationsymbol}%
    }{%
      \rotationsymbol%
    }%
  }{%
    \matr[#2][#3]{\rotationsymbol}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\platformrotation}
% \cmd{\platformrotation}
%    \begin{macrocode}
\ProvideDocumentCommand{\platformrotation}{ s o O{} }{%
  \IfBooleanTF{#1}{%
    \IfValueTF{#2}{%
      \platformorientation*[#2][#3]
    }{%
      \platformorientation*%
    }%
  }{%
    \platformorientation[#2][#3]%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\ndotpose}
% \cmd{\ndotpose}
%    \begin{macrocode}
\ProvideDocumentCommand{\ndotpose}{ m }{%
  \hat{\ndotvect{#1}{\posesymbol}}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\numcables}
% \cmd{\numcables}
%    \begin{macrocode}
\ProvideDocumentCommand{\numcables}{ }{m}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforces}
% \cmd{\cableforces}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforce}{ o O{} }{%
  \IfValueTF{#1}{%
    \prescript{#1}{#2}{\cableforcesymbol}%
  }{%
    \cableforcesymbol%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforces}
% \cmd{\cableforces}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforces}{ o O{} }{%
  \vect[#1][#2]{\cableforcesymbol}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforceminimum}
% \cmd{\cableforceminimum}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforceminimum}{ o O{} }{%
  \cableforce[#1][#2]_{\minimumsymbol}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforcemaximum}
% \cmd{\cableforcemaximum}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforcemaximum}{ o O{} }{%
  \cableforce[#1][#2]_{\maximumsymbol}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforcesminimum}
% \cmd{\cableforcesminimum}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforcesminimum}{ o O{} }{%
  \cableforces[#1][#2]_{\minimumsymbol}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforcesmaximum}
% \cmd{\cableforcesmaximum}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforcesmaximum}{ o O{} }{%
  \cableforces[#1][#2]_{\maximumsymbol}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cableforcesdistribution}
% \cmd{\cableforcesdistribution}
%    \begin{macrocode}
\ProvideDocumentCommand{\cableforcesdistribution}{ o O{} }{%
  \cableforces[#1][#2]_{\distributionsymbol}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\structurematrix}
% \cmd{\structurematrix}
%    \begin{macrocode}
\ProvideDocumentCommand{\structurematrix}{ o O{} }{%
  \IfValueTF{#1}{%
    \transpose{\matr[#1][#2]{A}}%
  }{%
    \transpose{\matr{A}}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
% \Finale
\endinput
